# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Apr 11 15:34:15 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))